
# more of the answer:

client.get(theNumber, function(err, reply) {
    console.log(reply);
});

client.get('11111', function(err, reply) {
    console.log(reply);
});

client.get('framework', function(err, reply) {
    console.log(reply);
});

client.get() lets you retrieve a key stored in Redis. The value of the key can be accessed via the callback argument reply. If the key doesnâ€™t exist, the value of reply will be empty.

++++++++++++

steves@druk-omen4:~/Documents/repositories/weblabSpring2016/week8-intro-server-side/serverside1/diceware2$ node hello2.js 
Reply: a
steves@druk-omen4:~/Documents/repositories/weblabSpring2016/week8-intro-server-side/serverside1/diceware2$ cat hello2.js 
var redis = require("redis"); // 1
//var client = redis.createClient(6379, '127.0.0.1', {no_ready_check: true}); // 2
var client = redis.createClient(6379, '127.0.0.1'); // 2
var pass = client.get(11111, redis.print); // 3
client.quit(); // 4
//console.log(pass);
steves@druk-omen4:~/Documents/repositories/weblabSpring2016/week8-intro-server-side/serverside1/diceware2$ cat hello.js 
var redis = require("redis"); // 1
var client = redis.createClient(6379, '127.0.0.1', {no_ready_check: true}); // 2
//var client = redis.createClient(6379, '127.0.0.1'); // 2
client.get(11111, redis.print); // 3
client.quit(); // 4

+++++++++++


var redis = require("redis"); // 1
var client = redis.createClient(6379, '127.0.0.1', {no_ready_check: true}); // 2
client.get(11111, redis.print); // 3
client.quit(); // 4


Require the redis library in Node.js. This is equivalent to import in Go, Python, or Java.
Create the Redis client object.
Execute the Redis command SET to save a String in a key called my_key.
Execute the Redis command GET to get the value stored in my_key, and then output it.
Close the connection with the Redis server.


$ node hello.js
Reply: Hello World using Node.js and Redis


++++++++++

var redis = require("redis"); // 1
var client = redis.createClient(6379, '127.0.0.1', {no_ready_check: true}); // 2
client.set("my_key", "Hello World using Node.js and Redis"); // 3
client.get("my_key", redis.print); // 4
client.quit(); // 5
